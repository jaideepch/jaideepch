// Based on [Eric Meyer's reset 2.0](//meyerweb.com/eric/tools/css/reset/index.html)
// Global reset rules.
// For more specific resets, use the reset mixins provided below
@mixin global-reset {
  html, body, div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed,
  figure, figcaption, footer, header, hgroup,
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video {
    @include reset-box-model;
    @include reset-font;
  }
  body {
    @include reset-body;
  }
  ol, ul {
    @include reset-list-style;
  }
  table {
    @include reset-table;
  }
  caption, th, td {
    @include reset-table-cell;
  }
  q, blockquote {
    @include reset-quotation;
  }
  a img {
    @include reset-image-anchor-border;
  }
  /* @include reset-html5;  */
}

// Reset all elements within some selector scope. To reset the selector itself,
// mixin the appropriate reset mixin for that element type as well. This could be
// useful if you want to style a part of your page in a dramatically different way.
@mixin nested-reset {
  div, span, applet, object, iframe,
  h1, h2, h3, h4, h5, h6, p, blockquote, pre,
  a, abbr, acronym, address, big, cite, code,
  del, dfn, em, img, ins, kbd, q, s, samp,
  small, strike, strong, sub, sup, tt, var,
  b, u, i, center,
  dl, dt, dd, ol, ul, li,
  fieldset, form, label, legend,
  table, caption, tbody, tfoot, thead, tr, th, td,
  article, aside, canvas, details, embed,
  figure, figcaption, footer, header, hgroup,
  menu, nav, output, ruby, section, summary,
  time, mark, audio, video, select {
    @include reset-box-model;
    @include reset-font;
    width: auto;
    float: none;
    background-image: none;
    background: transparent;
  }
  table {
    @include reset-table;
  }
  caption, th, td {
    @include reset-table-cell;
  }
  q, blockquote {
    @include reset-quotation;
  }
  a img {
    @include reset-image-anchor-border;
  }
  ol, ul {
    @include reset-list-style;
  }
}

// Reset the box model measurements.
@mixin reset-box-model {
  margin: 0;
  padding: 0;
  border: 0;
  border-radius: 0px;
  box-sizing: border-box;
}

// Reset the font and vertical alignment.
@mixin reset-font {
  font-size: 100%;
  font: inherit;
  font-weight: 400;
  line-height: normal;
  letter-spacing: 0;
  vertical-align: baseline;
  text-transform: none;
  text-indent: 0;
  color: inherit;
}

// Resets the outline when focus.
// For accessibility you need to apply some styling in its place.
@mixin reset-focus {
  outline: 0;
}

// Reset a body element.
@mixin reset-body {
  line-height: 1;
}

// Reset the list style of an element.
@mixin reset-list-style {
  list-style: none;
}

// Reset a table
@mixin reset-table {
  background-color: transparent;
  border-collapse: collapse;
  border-spacing: 0;
}

// Reset a table cell (`th`, `td`)
@mixin reset-table-cell {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

// Reset a quotation (`q`, `blockquote`)
@mixin reset-quotation {
  quotes: none;
  &:before, &:after {
    content: "";
    content: none;
  }
}

// Resets the border.
@mixin reset-image-anchor-border {
  border: none;
}

// A mixin that can be used for zooming in or zooming out depending on what is passed to it.
@mixin zoom($duration:"0.2s", $type:"ease-in", $translateY:"0px", $delay:"0s") {
  -webkit-transition: all #{$duration} #{$type} #{$delay};
  -ms-transition: all #{$duration} #{$type} #{$delay};
  -moz-transition: all #{$duration} #{$type} #{$delay};
  transition: all #{$duration} #{$type} #{$delay};
  -webkit-transform: translateY(#{$translateY});
  -ms-transform: translateY(#{$translateY});
  -moz-transform: translateY(#{$translateY});
  transform: translateY(#{$translateY});
}

// A mixin that provides shadows of different sizes.
@mixin shadow($level: 1, $shadowColor:"#b7c0cc") {
  @if $level == 1 {box-shadow: 0 1px 3px #{$shadowColor}, 0 1px 3px #{$shadowColor};}
  @else if $level == 2 {box-shadow: 0 3px 6px #{$shadowColor}, 0 3px 6px #{$shadowColor};}
  @else if $level == 3 {box-shadow: 0 10px 20px #{$shadowColor}, 0 6px 6px #{$shadowColor};}
  @else if $level == 4 {box-shadow: 0 14px 28px #{$shadowColor}, 0 10px 10px #{$shadowColor};}
  @else if $level == 5 {box-shadow: 0 19px 38px #{$shadowColor}, 0 15px 12px #{$shadowColor};}
}