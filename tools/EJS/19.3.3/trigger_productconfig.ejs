/**
 * ForeSee Trigger Configuration *****************************************************
 */
var triggerconfig = {
  /**
   * These are specified in client_properties.js. (DO NOT MODIFY)
   */
  id: '${client.id}',
  site_id: '${client.siteid}',

  /**
   * Where the survey is located
   */
  surveyAsyncCurl: '${client.surveyasynccurl}',

  /**
   * Is recording turned on? THIS IS AUTO-POPULATED.
   */
  hasReplay: "false",//'${hasreplay}',

  /**
   * How many milliseconds (1000/sec) to wait after the page first appears to initiate trigger
   */
  triggerDelay: <%=combinedconfig.trigger.config.triggerDelay%>,

  /**
   * How many milliseconds (1000/sec) to wait after the page first appears to show the invite
   */
  inviteDelay: <%=combinedconfig.trigger.config.inviteDelay%>,

  /**
   * We are free to re-invite someone after this length of days after they decline OR accept
   */
  repeatDays: {
    decline: <%=combinedconfig.trigger.config.repeatDays.decline%>,
    accept: <%=combinedconfig.trigger.config.repeatDays.accept%>,
  },

  /**
   * Time in milliseconds to reset page views in storage. If undefined, defaults to 24 hours
   */
  <% if (!combinedconfig.trigger.config.pageViewsResetTimeout) { %> // <% } %> pageViewsResetTimeout: <%=combinedconfig.trigger.config.pageViewsResetTimeout%>,

  /**
   * Time in milliseconds to reset CPPS. If undefined, defaults to 24 hours
   */
  <% if (!combinedconfig.trigger.config.cppsResetTimeout) { %> // <% } %> cppsResetTimeout: <%=combinedconfig.trigger.config.cppsResetTimeout%>,

  /**
   * How many milliseconds (1000/sec) to wait before converting the tracker
   */
  trackerConvertsAfter: <%=combinedconfig.trigger.config.trackerConvertsAfter%>,

  /**
   * When to convert the tracker to a survey (in milliseconds) under normal circumstances
   */
  trackerHeartbeatTimeout: <%=combinedconfig.trigger.config.trackerHeartbeatTimeout%>,

  /**
   * When to convert the tracker to a survey (in milliseconds) when we think we're going between
   * pages.
   */
  trackerHeartbeatLongTimeout: <%=combinedconfig.trigger.config.trackerHeartbeatLongTimeout%>,

  /**
   * For SMS and email on-exit measures, how long do we delay between heartbeats?
   */
  onExitMobileHeartbeatInterval: <%=combinedconfig.trigger.config.onExitMobileHeartbeatInterval%>,

  /**
   * How many milliseconds to wait before possibly re-inviting someone after abandoning the invite
   */
  reinviteDelayAfterInviteAbandon: <%=combinedconfig.trigger.config.reinviteDelayAfterInviteAbandon%>,

  /**
   * Do we allow things to run if we're not in the top frame? Default: 'dontRunOtherIframes'
   * Three options:
   *  - 'runAllIframes': Allow ability to Trigger and Record on all iFrames.
   *  - 'runRecordOnly': won't run Trigger but runs Record on Iframes.
   *  - 'dontRunOtherIframes': Won't allow Trigger or Record to work in other iFrames.
   */
  workInIframes: "<%=combinedconfig.trigger.config.workInIframes%>",

  /**
   * Should we ignore HTML5 navigation events? Default: false
   */
  ignoreNavigationEvents: <%=combinedconfig.trigger.config.ignoreNavigationEvents%>,

  /**
   * Public API name override. If undefined, defaults to "FSR"
   */
  publicApiName: "<%=combinedconfig.trigger.config.publicApiName%>",

  /**
   * Global exclude. These override anything else. Once a user has been excluded, that's it.
   * They don't have another opportunity to be re-included until the repeat days pass.
   */
  globalExclude: {
    urls: <%-JSON.stringify(combinedconfig.trigger.config.globalExclude.urls)%>,
    referrers: <%-JSON.stringify(combinedconfig.trigger.config.globalExclude.referrers)%>,
    userAgents: <%-JSON.stringify(combinedconfig.trigger.config.globalExclude.referrers)%>,
    browsers: <%-JSON.stringify(combinedconfig.trigger.config.globalExclude.referrers)%>,
    cookies: <%-JSON.stringify(combinedconfig.trigger.config.globalExclude.cookies)%>,
    variables: <%-JSON.stringify(combinedconfig.trigger.config.globalExclude.variables)%>,
  },

  /**
   * These items exclude inviting on a page. They don't prevent a definition from being selected,
   * but we won't actually invite if they meet these conditions.
   */
  inviteExclude: {
	  urls: <%-JSON.stringify(combinedconfig.trigger.config.inviteExclude.urls)%>,
    referrers: <%-JSON.stringify(combinedconfig.trigger.config.inviteExclude.referrers)%>,
    userAgents: <%-JSON.stringify(combinedconfig.trigger.config.inviteExclude.userAgents)%>,
    browsers: <%-JSON.stringify(combinedconfig.trigger.config.inviteExclude.browsers)%>,
    cookies: <%-JSON.stringify(combinedconfig.trigger.config.inviteExclude.cookies)%>,
    variables: <%-JSON.stringify(combinedconfig.trigger.config.inviteExclude.variables)%>,
  },

  /**
   * List of unsupported browsers and platforms supported
   * Note: IE 8 means we support 8 and above
   */
  browser_cutoff: {
    IE: <%=combinedconfig.trigger.config.browser_cutoff.IE%>,
    Safari: <%=combinedconfig.trigger.config.browser_cutoff.Safari%>,
    Firefox: <%=combinedconfig.trigger.config.browser_cutoff.Firefox%>,
    Chrome: <%=combinedconfig.trigger.config.browser_cutoff.Chrome%>,
    Opera: <%=combinedconfig.trigger.config.browser_cutoff.Opera%>,
  },

  /**
   * List of unsupported platforms
   * Note: Android 4 means we support 4 and above
   */
  platform_cutoff: {
    Android: <%=combinedconfig.trigger.config.platform_cutoff.Android%>,
    Winphone: <%=combinedconfig.trigger.config.platform_cutoff.Winphone%>,
    iPod: <%=combinedconfig.trigger.config.platform_cutoff.iPod%>,
    iPhone: <%=combinedconfig.trigger.config.platform_cutoff.iPhone%>,
    iPad: <%=combinedconfig.trigger.config.platform_cutoff.iPad%>,
  },

  /**
   * Name of device and the token to look for in the user agent string. Not case sensitive
   */
   device_blacklist: <%-JSON.stringify(combinedconfig.trigger.config.device_blacklist)%>,

  /**
   * Replay pools. This is the random dice throw that occurs on the first page. If it passes (and replay
   * is turned on) then we proceed normally. If it does not pass then we will not record AND we will not trigger
   * invitations for anybody either.
   *
   * This is an array of objects. Each object contains a URL path match and an "sp" value which is the sampling
   * percentage. 100 is always-in, and 0 is always-out.
   */
  replay_pools: <%-JSON.stringify(combinedconfig.trigger.config.replay_pools)%>,

  /**
   * Re-pools are parts of the site where we might want to undo to cxReplay pooling result
   * and potentially re-include someone into cxReplay recording.
   */
  replay_repools: <%-JSON.stringify(combinedconfig.trigger.config.replay_repools)%>,

  /**
   * Examples of CPPS
   * terms, browser, os, referrer, site, code, GA_ID, OTR_VID, OMTR_BEACON, fp, url
   *
   * If commented out or empty, nothing will be disabled
   */
  disable_cpps: [/*"code", "referrer"*/],

  /**
   * The list of CPPS that the customer may want to set
   */
   cpps: <%-JSON.stringify(combinedconfig.trigger.config.cpps)%>,

  /**
   * Optional true conversion. To turn this off, simply erase this section or set 'enabled' to false.
   */
   /*, trueconversion: <%-JSON.stringify(combinedconfig.trigger.config.trueconversion)%>*/

};

/**
 * The Survey Definition(s) *****************************************************
 * Note: you do not have to re-specify all parameters in each subsequent definition,
 * only the ones that have changed. Properties are copied from earlier definitions down
 * to later ones when they haven't been specified.
 */
/**
 * @preserve
 * @@SVCONFIG_GOES_HERE@@
 */

/**
 * A generic configuration module that other modules may include
 */
_fsDefine('triggerconfig', function () {
  /**
   * Export all the config
   */
  return { config: triggerconfig, surveydefs: surveydefs };
});