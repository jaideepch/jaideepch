/**
 * Record Configuration *****************************************************
 */
var config = {
  /**
   * URL blacklist
   */
  blacklist: {
    active: <%=combinedconfig.record.blacklist.active%>,
    text: <%-JSON.stringify(combinedconfig.record.blacklist.text)%>,
    variables: <%-JSON.stringify(combinedconfig.record.blacklist.variables)%>,
    cookies: <%-JSON.stringify(combinedconfig.record.blacklist.cookies)%>,
  },
  <% if (JSON.stringify(combinedconfig.record.whitelist) == '{"text":[],"variables":[],"cookies":[]}') { %> /*  <% } %>
  whitelist: {
    active: <%=combinedconfig.record.whitelist.active%>,
    text: <%-JSON.stringify(combinedconfig.record.whitelist.text)%>,
    variables: <%-JSON.stringify(combinedconfig.record.whitelist.variables)%>,
    cookies: <%-JSON.stringify(combinedconfig.record.whitelist.cookies)%>,
  },
  <% if (JSON.stringify(combinedconfig.record.whitelist) == '{"text":[],"variables":[],"cookies":[]}') { %> */  <% } %>
  
  /**
   * The replay_id
   */
  clientId: '${client.replayid}',

  /**
   * Other settings
   */
  advancedSettings: {

    /**
     * Tell us the general layout of the site's main column.
     * Valid options: 'LEFTFIXED', 'CENTERFIXED', 'LEFTSTRETCH', or 'CENTERSTRETCH'
     */
    layout: 'CENTERFIXED',

    /**
     * Set up cxReplay pools, which apply before cxR is activated. This is a sticky state and once
     * you are out, you're out (unless you get re-pooled back in)
     */
     replay_pools: <%-JSON.stringify(combinedconfig.record.advancedSettings.replay_pools)%>,

    /**
     * Global exclude. These supercede anything else. Once a user has been excluded, that's it.
     * They don't have another opportunity to be re-included until the repeat days pass.
     */
    exclude: {
      urls: <%-JSON.stringify(combinedconfig.record.advancedSettings.exclude.urls)%>,
      referrers: <%-JSON.stringify(combinedconfig.record.advancedSettings.exclude.referrers)%>,
      userAgents: <%-JSON.stringify(combinedconfig.record.advancedSettings.exclude.userAgents)%>,
      browsers: <%-JSON.stringify(combinedconfig.record.advancedSettings.exclude.browsers)%>,
      cookies: <%-JSON.stringify(combinedconfig.record.advancedSettings.exclude.cookies)%>,
      variables: <%-JSON.stringify(combinedconfig.record.advancedSettings.exclude.variables)%>,
    },

    /**
     * List of supported browsers
     * Note: IE 10 means we support 10 and above
     * Note: Firefox 14+ due to MutationObservers
     */
    browser_cutoff: {
      'IE': <%=combinedconfig.record.advancedSettings.browser_cutoff.IE%>,
      'Safari': <%=combinedconfig.record.advancedSettings.browser_cutoff.Safari%>,
      'Firefox': <%=combinedconfig.record.advancedSettings.browser_cutoff.Firefox%>,
      'Chrome': <%=combinedconfig.record.advancedSettings.browser_cutoff.Chrome%>,
      'Chrome Mobile': <%=combinedconfig.record.advancedSettings.browser_cutoff["Chrome Mobile"]%>,
      'Opera': <%=combinedconfig.record.advancedSettings.browser_cutoff.Opera%>,
    },

    /**
     * List of supported platforms
     * Note: Android 4 means we support 4 and above
     * Note: Android 4.4 because of MutationObserver
     */
    platform_cutoff: {
      'Android': <%=combinedconfig.record.advancedSettings.platform_cutoff.Android%>,
      'Winphone': <%=combinedconfig.record.advancedSettings.platform_cutoff.Winphone%>,
      'iPod': <%=combinedconfig.record.advancedSettings.platform_cutoff.iPod%>,
      'iPhone': <%=combinedconfig.record.advancedSettings.platform_cutoff.iPhone%>,
      'iPad': <%=combinedconfig.record.advancedSettings.platform_cutoff.iPad%>,
    },

    /**
     * We can exclude some device types for record only here
     * If undefined, this will default to all devices true. cxRecord needs to be set to true in trigger_config.js
     */
    device_type_support: {
      desktop: <%=combinedconfig.record.advancedSettings.device_type_support["desktop"]%>,
      phone: <%=combinedconfig.record.advancedSettings.device_type_support.phone%>,
      tablet: <%=combinedconfig.record.advancedSettings.device_type_support.tablet%>,
    },

    /**
     * Name of device and the token to look for in the user agent string. Not case sensitive
     */
     device_blacklist: <%-JSON.stringify(combinedconfig.record.advancedSettings.device_blacklist)%>,

    /**
     * @namespace The PII JSON that targets which elements should be masked/unmasked. Note that we now use
     * whitelisting syntax. EG: "*myURLFragment*". See utils.testAgainstSearch() for docs.
     *
     * @key staticBlockEls : Matches url wildcards with CSS selectors that targets which elements to block on
     *  that page. Only applied once to the elements when page loaded therefore it
     *  doesn't work for elements that are dynamically inserted into document. For that use case, use
     *  dynamicBlockEls.
     *
     * @key dynamicBlockEls : Identifies elements to block. Works even when elements are inserted into document.
     *  Only use this when necessary, it's not as efficient.
     *
     * @key staticVisibleEls : Matches url wildcards with CSS selectors that targets which elements to block on
     *  that page. Only applied once to the elements when page loaded therefore it
     *  doesn't work for elements that are dynamically inserted into document. For that use case, use
     *  dynamicBlockEls.
     *
     * @key dynamicVisibleEls : Identifies inputs, textareas and selects to unblock. Works even when elements are
     *  inserted into document. Only use this when necessary, it's not as efficient.
     *
     * @key assetBlockEls : Identifies assets to block. Most common asset asked to be blocked are images.
     *
     * @key removeVisibilityEls : Unblocks elements that were made visible by dynamicVisibleEls. Common use case is
     *  when we want to unblock all select tags but then block specific select tags (e.g.: credit card expiry)
     *
     *  @key obscureEls : Identifies elements to obscuring. Obscuring an element will result in a div being
     *      drawn over top of that element with a message reading that this item has been blocked by Foresee.
     */
    pii: {
      staticBlockEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.staticBlockEls)%>,
      dynamicBlockEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.dynamicBlockEls)%>,
      staticVisibleEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.staticVisibleEls)%>,
      dynamicVisibleEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.dynamicVisibleEls)%>,
      assetBlockEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.assetBlockEls)%>,
      removeVisibilityEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.removeVisibilityEls)%>,
      obscureEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.obscureEls)%>,

      // Note: if you specify these, they override blacklisting and we become a whitelisting operation on this page
      // URL Matching for Whitelist uses utils.testAgainstSearch() - SESSIONREPLAY-1410
      staticWhiteListEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.staticWhiteListEls)%>,
      dynamicWhiteListEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.pii.dynamicWhiteListEls)%>,
    },

    /**
     * Enable SVG capturing.
     */
    svgCaptureEnabled: <%=combinedconfig.record.advancedSettings.svgCaptureEnabled%>,

    /**
     * Elements to watch scroll on  (sample usage: scrollEls: "div,ul",)
     */
    scrollEls: <%-JSON.stringify(combinedconfig.record.advancedSettings.scrollEls)%>,

    /**
     * Use element level DOM mutation method rewrites instead of prototype mutation method rewrites.
     * Default will run this on for IE8, but not IE9
     */
    useEleMutation: <%=combinedconfig.record.advancedSettings.useEleMutation%>,

    /**
     * Custom regular expressions used in 'processHTML' function to get rid of content from the HTML
     */
    regexScrub: <%-JSON.stringify(combinedconfig.record.advancedSettings.regexScrub)%>,

    /**
     * Set of rules for determining if page should be recorded in low fidelity mode. For a page to match one of
     * the rules it must match the url wildcard, the browser type and must be less than or equal to the
     * browser version number.
     */
    lowFidelity: <%-JSON.stringify(combinedconfig.record.advancedSettings.lowFidelity)%>,

    /**
     * Customize the CSS selector that targets the watchNodeList for IE. The watchNodeList is the list of HTML
     * nodes that Internet Explorer captures interactions with.
     */
    watchNodeList: "<%=combinedconfig.record.advancedSettings.watchNodeList%>",

    /**
     * Set Keep comments to true to stop the removal of html comment content during HTML serialization.
     */
    keepComments: <%=combinedconfig.record.advancedSettings.keepComments%>,

    /**
     * Should we skip the tracking of iFrames
     */
    skipIframes: <%=combinedconfig.record.advancedSettings.skipIframes%>,


    /**
     * Should we skip gZip compression
     */
    skipCompression: <%=combinedconfig.record.advancedSettings.skipCompression%>
  }
};
