__fsJSONPCB({"filename":"templates_trigger_classicdesktop_invite.html","contents":""});